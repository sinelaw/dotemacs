#!/usr/bin/env python

import sys, re, os

def main():
    if sys.argv[1] == "save-kdir":
        kdir, save_file = sys.argv[2:4]
        kdir_saved = None
        if os.path.exists(save_file):
            f = open(save_file, "r")
            kdir_saved = f.read().strip()
            f.close()
        if kdir_saved != kdir:
            f = open(save_file, "w")
            f.write(kdir)
            f.close()
        return

    for arg in sys.argv[1:]:
        m = re.match("(.*)_flymake.c", arg)
        if not m:
            m = re.match("(.*/)?flycheck_(.*).c", arg)
            if not m:
                continue
            else:
                y = m.groups(0)[1]
                if m.groups(0)[0]:
                    y = m.groups(0)[0] + "/" + y
        else:
            y = m.groups(0)[0]

        params = []
        output_file = False
        source_file = False
        suffix_to_find = "/include/linux/kconfig.h"
        chdir = None
        dy = os.path.dirname(y)
        if not dy:
            dy = "."
        for p in open("%s/.%s.o.cmd" % (dy, os.path.basename(y), )).readlines()[0].strip().split(' ')[2:]:
            if p.startswith('-Wp,'):
                continue
            if p.startswith('-c'):
                source_file = True
                continue
            if p.startswith('-o'):
                output_file = True
                continue
            if output_file:
                output_file = False
                continue
            if source_file:
                source_file = False
                arg = os.path.join(os.getcwd(), arg)
                params.append(arg)
                continue
            p = p.replace("\\#", "#")
            if p:
                params.append(p)
            if p.endswith(suffix_to_find):
                chdir = p[:-len(suffix_to_find)]

        if not chdir or chdir == ".":
            d = os.path.dirname(arg)
            found = False
            while d:
                f = os.path.join(d, ".kdir")
                if os.path.exists(f):
                    f = open(f, "r")
                    chdir = f.read().strip()
                    found = True
                    f.close()
                    break
                d = os.path.dirname(d)
            if not found:
                return

        params.append("-fsyntax-only")
        os.chdir(chdir)
        os.system(' '.join(params))

if __name__ == "__main__":
    main()
